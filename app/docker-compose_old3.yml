services:
  client:
    build: ./client
    ports:
      - "4200:80"
    depends_on:
      - server
    networks:
      - yacht-net

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: yacht-charter-server
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/yacht_charter?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - yacht-net
    restart: unless-stopped
  db:
    image: mysql:8.0
    container_name: yacht-charter-db
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=yacht_charter
      - MYSQL_USER=yacht_user
      - MYSQL_PASSWORD=yacht_password
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]  # Dodano hasło
      interval: 30s  # Zwiększono interwał
      timeout: 10s   # Zwiększono timeout
      retries: 5
      start_period: 60s  # Dodano okres startowy
    networks:
      - yacht-net
    restart: always

volumes:
  mysql-data:
    name: yacht-charter-mysql-data

networks:
  yacht-net:
    driver: bridge